'scopeName': 'source.oxpath'
'name': 'OXPath'
'fileTypes': ['oxp', 'oxt']

'patterns': [
    {
      #'disabled': '1'
      'comment': 'OXPath doc declaration'
      'name' : 'keyword.control.oxpath'
      'begin': '(doc(?:\\s|\\t|\\n)*\\()'
      'beginCaptures':
          '0':
            'name': 'punctuation.section.doc.oxpath'
      'end' : '\\)'
      'endCaptures':
          '0':
            'name': 'punctuation.bracket.round.oxpath'
      'patterns': [
        {
          'include': '#string'
        }
        {
          'include': '#actionPred'
        }
      ]
    }
    {
      #'disabled': '1'
      'comment' : 'OXPathURLAction'
      'name' : 'action.urlaction.oxpath'
      'match': '({(?:\\s|\\t|\\n)*<)(.+?)(>)(.+?)?(\\/})'
      'captures':
          '2':
            'patterns': [
              {
                'include': '#urlname'
              }
            ]
          '4':
            'patterns': [
              {
                'include': '#actionPred'
              }
            ]
    }
    {
      'include' : '#string'
    }
    {
      #'disabled': '1'
      'comment' : 'user action'
      'begin': '/\\{'
      'beginCaptures':
        '0':
          'name': 'punctuation.definition.action.begin.oxpath'
      'end': '/?\\}'
      'endCaptures':
        '0':
          'name': 'punctuation.definition.action.end.oxpath'
      'name': 'punctuation.definition.action.oxpath'
      'patterns':[
        {
          'include' : '#actions'
        }
      ]
    }
    {
      #'disabled': '1'
      #TODO fix
      'comment' : 'attributes'
      'matches' : '(\\[)(@)([-_a-zA-Z]+)=.+(\\])'
      'name': 'support.constant.oxpath'
    }
    {
      'disabled': '1'
      #TODO fix
      'comment': 'predicates'
      'begin': '\\['
      'end': '\\]'
      'name': 'storage.modifier.oxpath'
      'patterns': [
        {
          'include': '$self'
        }
      ]
    }
    {
      #'disabled': '1'
      'comment': 'extraction marker'
      'match': '(:<)(.+?)((=)(.+))?(>)'
      'captures':
        '1':
          'name': 'punctuation.definition.extraction.begin.oxpath'
        '2':
          'patterns':[
            {
              'include': '#OXPathExtractionName'
            }
          ]
        '4':
          'name': 'punctuation.oxpath'
        '5':
          'patterns':[
            {
              'include': '#OXPathExtractionValue'
            }
          ]
        '6':
          'name': 'punctuation.definition.extraction.end.oxpath'
      'name': 'punctuation.definition.extraction.oxpath'
    }
]
'repository':
    'actions':
      'comment': 'user actions'
      'name': 'entity.name.tag.oxpath'
      'patterns': [
        {
          'include': '#integer'
        }
        {
          'include': '#actionKeyword'
        }
        {
          'include': '#actionVariable'
        }
        {
          'include': '#string'
        }
      ]
    'actionVariable':
      'comment': 'OXPath action variable'
      'name': 'entity.name.tag.oxpath'
      'match': '\\$(.+)\\b'
      'captures':
        '1':
          'patterns':[
            {
              'include': '#NCName'
            }
          ]
    'actionKeyword':
      'comment': 'OXPath user action keyword'
      'name': 'entity.name.tag.oxpath'
      'match': '\\b(focus|click|clkwithchange|pressenter|enterframe|movetoframe|movetohref|dblclick|mousedown|mouseenter|mousemove|mouseover|mouseout|mouseup|wheel|submit|check|uncheck)\\b'
    'url':
      'comment': 'see grammar rule URLName in OXPath - should match any valid URL including port number, paths and POST parameters'
      'match': '((http(s)?)://)(.+?)(:[0-9]+)(/(.+?))?(\\?(.+?))?'
      'name': 'entity.name.other.url.oxpath'
      'captures':
        '4':
          'patterns':[
            {
              'include': '#urlname'
            }
          ]
        '7':
          'patterns':[
            {
              'include': '#urlstring'
            }
          ]
        '9':
          'patterns':[
            {
              'include': '#urlstring'
            }
          ]
    'urlname':
      'comment': 'an URL can be a (valid) URL string or an IP address'
      'patterns': [
        {
          'include': '#urlstring'
        }
        {
          'include': 'ipadress'
        }
      ]
    'urlstring':
      'comment': 'see grammar rule URLName in OXPath'
      'match': '[a-zA-Z][a-zA-Z0-9$\\-_@\\.&\\+=!\\*"\'\\(\\),%]*'
      'name' : 'entity.name.other.url.oxpath'
    'ipadress':
      'comment': 'see grammar rule URLName in OXPath'
      'match': '([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})'
      'name' : 'constant.numeric.ip.oxpath'
    'number':
      'comment' : 'integers and decimals'
      'name': 'constant.numeric.oxpath'
      'patterns': [
        {
          'include': '#decimal'
        }
        {
          'include': '#integer'
        }
      ]
    'decimal':
      'comment': 'decimal numbers'
      'match': '([0-9]+\\.([0-9]+)?)|(\\.[0-9]+)'
      'name': 'constant.numeric.decimal.oxpath'
    'integer':
      'comment': 'integer numbers'
      'match': '[0-9]+'
      'name': 'constant.numeric.integer.oxpath'
    'actionPred':
        'match': '\\[((wait=[0-9]+)|(noback))(,((wait=[0-9]+)|(noback)))*\\]'
        'name': 'storage.type.function.oxpath'
        'patterns': [
          {
            'include': '#numbers'
          }
        ]
    'OXPathExtractionValue':
      'comment': 'value of an OXPath extraction expression'
      'patterns':[
        {
          'include': '#functionCall'
        }
        {
          'include': '#parenExpression'
        }
        {
          'include': '#string'
        }
        {
          'include': '#number'
        }
      ]
    'parenExpression':
      'comment': 'expression in parantheses'
      'begin': '\\('
      'end': '\\)'
      'name': 'oxpath'
      'patterns':[
        {
          'include' : '$self'
        }
      ]
    'functionCall':
      'comment': 'XPath function calls or user function calls - see grammar rules XPathFunctionCallName and XPathUserFunctionCallName'
      'begin': '\\b(position|last|count|id|local-name|namespace-uri|name|string|concat|starts-with|contains|substring-before|substring-after|string-length|normalize-space|translate|boolean|not|true|false|lang|number|sum|floor|ceiling|round|opex:minus|opex:plus|substring-before-reverse|substring-after-reverse|substring-reverse|replace|string-join|current-url|page-content|screenshot|save-page|now|urify|jaro-wrinkler|qualify-url|dom-property|select-text|innerhtml|outerhtml|to-xml|is-visible|is-invisible)(?:\\s|\\t|\\n)*(\\()'
      'beginCaptures':
        '1':
          'name': 'support.function.oxpath'
        '2':
          'name': 'punctuation.definition.parameters.begin.oxpath'
      'end': '(\\))'
      'endCaptures':
        '1':
          'name': 'punctuation.definition.parameters.end.oxpath'
      'patterns':[
        {
          'include': '#functionCall'
        }
        {
          'include': '$self'
        }
      ]
    'NCName':
      'match': '([A-Za-z_])([A-Za-z_]|\\-|[0-9])*'
      'name': 'entity.other.nc-name.oxpath'
    'OXPathExtractionName':
      'comment': 'name of an extraction marker'
      'match': '([^>]+)(:[^>]+)?'
      'name': 'constant.character.oxpath'
      'captures':
        '1':
          'patterns':[
            {
              'include': '#NCName'
            }
          ]
        '3':
          'patterns':[
            {
              'include': '#NCName'
            }
          ]
    'doublequotedString':
      'begin': '"'
      'beginCaptures':
        '0':
          'name': 'punctuation.definition.string.begin.oxpath'
      'end': '"'
      'endCaptures':
        '0':
          'name': 'punctuation.definition.string.end.oxpath'
      'name': 'string.quoted.double.oxpath'
    'singlequotedString':
      'begin': '\''
      'beginCaptures':
        '0':
          'name': 'punctuation.definition.string.begin.oxpath'
      'end': '\''
      'endCaptures':
        '0':
          'name': 'punctuation.definition.string.end.oxpath'
      'name': 'string.quoted.single.xquery'
    'string':
      'patterns': [
        {
          'include': '#doublequotedString'
        }
        {
          'include': '#singlequotedString'
        }
      ]
